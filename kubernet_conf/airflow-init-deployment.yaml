apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: airflow-init
  name: airflow-init
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: airflow-init
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: airflow-init
    spec:
      containers:
        - args:
            - -c
            - "function ver() {\n  printf \"%04d%04d%04d%04d\" ${1//./ }\n}\nairflow_version=$(AIRFLOW__LOGGING__LOGGING_LEVEL=INFO && gosu airflow airflow version)}\nairflow_version_comparable=$(ver ${airflow_version})\necho ${airflow_version_comparable}\nmin_airflow_version=2.2.0\nmin_airflow_version_comparable=$(ver ${min_airflow_version})\nif (( airflow_version_comparable < min_airflow_version_comparable )); then\n  echo\n  echo -e \"\\033[1;31mERROR!!!: Too old Airflow version ${airflow_version}!\\e[0m\"\n  echo \"The minimum Airflow version supported: ${min_airflow_version}. Only use this or higher!\"\n  echo\nfi\nif [[ -z \"\" ]]; then\n  echo\n  echo -e \"\\033[1;33mWARNING!!!: AIRFLOW_UID not set!\\e[0m\"\n  echo \"If you are on Linux, you SHOULD follow the instructions below to set \"\n  echo \"AIRFLOW_UID environment variable, otherwise files will be owned by root.\"\n  echo \"For other operating systems you can get rid of the warning with manually created .env file:\"\n  echo \"    See: https://airflow.apache.org/docs/apache-airflow/stable/howto/docker-compose/index.html#setting-the-right-airflow-user\"\n  AIRFLOW_UID=50000\n  echo\"set to \" \nfi\none_meg=1048576\nmem_available=$(($(getconf _PHYS_PAGES) * $(getconf PAGE_SIZE) / one_meg))\ncpus_available=$(grep -cE 'cpu[0-9]+' /proc/stat)\ndisk_available=$(df / | tail -1 | awk '{print $4}')\nwarning_resources=\"false\"\nif (( mem_available < 4000 )) ; then\n  echo\n  echo -e \"\\033[1;33mWARNING!!!: Not enough memory available for Docker.\\e[0m\"\n  echo \"At least 4GB of memory required. You have $(numfmt --to iec $((mem_available * one_meg)))\"\n  echo\n  warning_resources=\"true\"\nfi\nif (( cpus_available < 2 )); then\n  echo\n  echo -e \"\\033[1;33mWARNING!!!: Not enough CPUS available for Docker.\\e[0m\"\n  echo \"At least 2 CPUs recommended. You have ${cpus_available}\"\n  echo\n  warning_resources=\"true\"\nfi\nif (( disk_available < one_meg * 10 )); then\n  echo\n  echo -e \"\\033[1;33mWARNING!!!: Not enough Disk space available for Docker.\\e[0m\"\n  echo \"At least 10 GBs recommended. You have $(numfmt --to iec $((disk_available * 1024 )))\"\n  echo\n  warning_resources=\"true\"\nfi\nif [[ ${warning_resources} == \"true\" ]]; then\n  echo\n  echo -e \"\\033[1;33mWARNING!!!: You have not enough resources to run Airflow (see above)!\\e[0m\"\n  echo \"Please follow the instructions to increase amount of resources available:\"\n  echo \"   https://airflow.apache.org/docs/apache-airflow/stable/howto/docker-compose/index.html#before-you-begin\"\n  echo\nfi\nmkdir -p /sources/logs /sources/dags /sources/plugins\nchown -R \":0\" /sources/{logs,dags,plugins}\nexec /entrypoint airflow version\n"
          command:
            - /bin/bash
          env:
            - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
              value: "true"
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor
            - name: AIRFLOW__CORE__FERNET_KEY
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: "false"
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: postgresql+psycopg2://airflow:airflow@postgres/airflow
            - name: _AIRFLOW_DB_UPGRADE
              value: "true"
            - name: _AIRFLOW_WWW_USER_CREATE
              value: "true"
            - name: _AIRFLOW_WWW_USER_PASSWORD
              value: airflow
            - name: _AIRFLOW_WWW_USER_USERNAME
              value: airflow
            - name: _PIP_ADDITIONAL_REQUIREMENTS
          image: apache/airflow:2.4.1
          name: airflow-init
          resources: {}
          volumeMounts:
            - mountPath: /opt/airflow/dags
              name: airflow-init-claim0
            - mountPath: /opt/airflow/logs
              name: airflow-init-claim1
            - mountPath: /opt/airflow/plugins
              name: airflow-init-claim2
            - mountPath: /sources
              name: airflow-init-claim3
      restartPolicy: Always
      volumes:
        - name: airflow-init-claim0
          persistentVolumeClaim:
            claimName: airflow-init-claim0
        - name: airflow-init-claim1
          persistentVolumeClaim:
            claimName: airflow-init-claim1
        - name: airflow-init-claim2
          persistentVolumeClaim:
            claimName: airflow-init-claim2
        - name: airflow-init-claim3
          persistentVolumeClaim:
            claimName: airflow-init-claim3
status: {}
